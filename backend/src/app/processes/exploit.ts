import { Process, ProcessData } from "~/lib/types/process.type";
import { Computer } from "~/app/computer";
import settings from "~/settings";
import GameException from "~/lib/exceptions/game.exception";

const exploit = {
  settings: {
    parameters: {
      ip: true,
    },
    external: true,
  },
  delay: async (
    computer: Computer | null,
    executor: Computer,
    data: ProcessData,
  ) => {
    if (!computer?.computer) {
      throw new Error("no computer");
    }

    const firewall = computer.getFirstTypeInstalled("firewall");
    const ftpr = executor.getFirstTypeInstalled("f2pr");

    return (
      firewall.getExecutionCost("execute") +
      ftpr.getExecutionCost("execute") +
      settings.processDelay.exploit * 1000
    );
  },
  before: async (
    computer: Computer | null,
    executor: Computer,
    data: ProcessData,
  ) => {
    if (!computer?.computer) {
      throw new Error("no computer");
    }
    if (computer.computerId === executor.computerId) {
      throw new GameException(
        "cannot perform this action on your own computer",
      );
    }

    const firewall = computer.getFirstTypeInstalled("firewall");
    const ftpr = executor.getFirstTypeInstalled("ftpr");

    if (firewall.level > ftpr.level) {
      throw new GameException("your ftp reversal (ftpr) tool is too weak");
    }

    return true;
  },
  after: async (
    computer: Computer | null,
    executor: Computer,
    data: ProcessData,
  ) => {
    if (!computer?.computer) {
      throw new Error("no computer");
    }

    if (!executor.addressBook) throw new Error("owner address book invalid");

    return await executor.addressBook.addToAddressBook(computer, "FTP");
  },
} satisfies Process;
export default exploit;